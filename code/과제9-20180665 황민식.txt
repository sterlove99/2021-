//문자열내의 숫자문자(즉 ‘0’~’9’)의 개수를 알려주는 함수를 만들고, 호출해 보시오
//( int cntNumber(char *) )
#include <stdio.h>
int cntNumber(char* p);

void main() {
	char s[100];
	printf("숫자가 포함된 문자열을 입력하시오\n");
	scanf_s("%s", s, 100);

	printf("숫자개수 : %d \n", cntNumber(s));
}


int cntNumber(char* p) {
	int cnt = 0;

	while (*p) {
		if (*p >= '0' && *p <= '9') {
			cnt++;
		}
			p++;
	}
	return cnt;
}

//문자열을 입력 받아 (gets() 이용), 3 글자씩 잘라 각각 새 라인에 출력하시오.
#include <stdio.h>

void main() {
	char s[100];
	int i;
	printf("문자열을 입력하시오.\n");
	gets_s(s,100);
	i = 0;
	while (s[i]) {
		printf("%c", s[i]);
		
		i++;
		if (i % 3 == 0) {
			printf("\n");
		}
		
	}


}
/*문자열을 인자로 받아 모음만으로 이루어진 문자열을 구해, 
포인터 인자로 전달해 주는 함수를 만들고, 호출해 보시오.
(단, 모음은 a,e,i,o,u 임)   ( void strVowel(char *, char *) )
*/
#include <stdio.h>
void strVowel(char* s1, char* s2);
void main() {

	char s1[100], s2[100];
	

	printf("문자열을 입력하시오\n");
	gets_s(s1, 100);
	strVowel(s1, s2);
	puts(s2);
}
void strVowel(char* s1, char* s2) {
	while (*s1) {
		if (*s1 == 'a' || *s1 == 'e' || *s1 == 'i' || *s1 == 'o' || *s1 == 'u') {
			*s2 = *s1;
			 s2++;
		}
		s1++;
	}
	*s2 = '\0';
}

//입력 받은 문자열에서 맨 가운데 문자를 출력하시오.(길이가 짝수면 2개 출력)
#include <stdio.h>
#include <string.h>

void main() {
	char s[100];
	int leng;
	printf("문자열을 입력하시오\n");
	gets_s(s, 100);

	leng = strlen(s);
	if (leng % 2 == 1) {
		printf("%c\n",s[leng / 2]);
	}
	else {
		printf("%c %c\n", s[(leng / 2) - 1], s[leng / 2]);
	}
}

//문자열을 거꾸로 출력해주는 함수를 만들고, 호출해 보시오.
#include<stdio.h>
#include<string.h>
void cha(char* p);


void main() {
	char a[100];
	printf("문자열을 입력하시오\n");
	gets_s(a, 100);
	cha(a);

}

void cha(char* p) {
	
	int i = 0;

	for(int i = strlen(p) - 1;i>=0;i--){
		printf("%c",p[i]);
		
	}
}

/*두 문자열을 서로 교환하는 함수를 만들고, 호출해 보시오.
(단, 호출할 때 교환할 여유공간을 확보할 것)( void swapStr(char *, char *) )
*/
#include <stdio.h>
#include <string.h>
void swapStr(char* p, char* p1);

void main() {
	char a[100], b[100];
	printf("문자열을 입력하시오.\n");
	gets_s(a, 100);
	gets_s(b, 100);

	swapStr(a, b);

	
	
}

void swapStr(char* p, char* p1) {

	char pp[100];
	
	strcpy_s(pp, 100, p);
	strcpy_s(p, 100, p1);
	strcpy_s(p1, 100, pp);
	printf("%s %s ", p, p1);
}


/*문자열 5개를 입력 받아 영어사전식으로 정렬하여 출력하시오.
(2차원 배열 이용) (문자열 정렬: “a”<“aaa“<“ab”<…<“zzz”)
*/
#include <stdio.h>
#include <string.h>
void swapStr(char* p, char* p1);
void main() {

	int b;
	char a[5][100];
	char* p[5];
	
	
	printf("문자열을 5개 입력하시오.\n");
	for (int i = 0; i < 5; i++) {
		gets_s(a[i], 100);
	}
	
	for (int i = 0; i < 5-1; i++) {
		for (int j = 0; j < 5-1-i; j++) {
			b = strcmp(a[j], a[j + 1]);
			if (b > 0) {
				swapStr(a[j], a[j+1]);
			}
		}
		
	}

	




	for (int i = 0; i < 5; i++) {
		printf("%s", a[i]);
		if (i < 4) {
			printf("<");
		}
		
	}
	
	
}
void swapStr(char* p, char* p1) {

	char pp[100];

	strcpy_s(pp, 100, p);
	strcpy_s(p, 100, p1);
	strcpy_s(p1, 100, pp);
	
}

//한행을 표준입력으로 입력받은문자열의 길이를 구하는 함수 mystrlen()을 구현하여 라이브러리
//strlen()과 결과를 비교하는 프로그램을 작성하시오.
#include <stdio.h>
#include <string.h>
int mystrlne(const char* p);
void main() {
	char a[100];
	printf("문자열 입력\n");
	gets_s(a, 100);
	
	
	printf("strlen : %d mystrlne : %d", strlen(a), mystrlne(a));

}
int mystrlne(const char* p) {
	int count=0;
	
	while (*p) {
		count++;
		p++;
	}

	return count;
}









